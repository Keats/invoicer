{
  "name": "run-sequence",
  "description": "Run a series of dependent gulp tasks in order",
  "version": "0.3.6",
  "homepage": "https://github.com/OverZealous/run-sequence",
  "repository": {
    "type": "git",
    "url": "git://github.com/OverZealous/run-sequence.git"
  },
  "bugs": {
    "url": "https://github.com/OverZealous/run-sequence/issues"
  },
  "author": {
    "name": "Phil DeJarnett",
    "url": "http://overzealous.com/"
  },
  "main": "./index.js",
  "keywords": [
    "gulpfriendly",
    "pipe",
    "sequence",
    "gulp",
    "orchestrator"
  ],
  "dependencies": {
    "chalk": "*"
  },
  "devDependencies": {
    "gulp": "*",
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/OverZealous/run-sequence/raw/master/LICENSE"
    }
  ],
  "readme": "# run-sequence\r\n\r\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\r\n\r\nRuns a sequence of gulp tasks in the specified order.  This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.\r\n\r\n> ### Please Note\r\n>\r\n> This is intended to be a temporary solution until [orchestrator](https://github.com/robrich/orchestrator/) is updated to support [non-dependent ordered tasks](https://github.com/robrich/orchestrator/issues/21).\r\n> \r\n> Be aware that this solution is a hack, and may stop working with a future update to orchestrator. \r\n\r\nEach argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.\r\n\r\nIf the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.\r\n\r\n## Usage\r\n\r\nFirst, install `run-sequence` as a development dependency:\r\n\r\n```shell\r\nnpm install --save-dev run-sequence\r\n```\r\n\r\nThen add use it in your gulpfile, like so:\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar runSequence = require('run-sequence');\r\nvar clean = require('gulp-clean');\r\n\r\n// This will run in this order:\r\n// * build-clean\r\n// * build-scripts and build-styles in parallel\r\n// * build-html\r\n// * Finally call the callback function\r\ngulp.task('build', function(callback) {\r\n  runSequence('build-clean',\r\n              ['build-scripts', 'build-styles'],\r\n              'build-html',\r\n              callback);\r\n});\r\n\r\n// configure build-clean, build-scripts, build-styles, build-html as you\r\n// wish, but make sure they either return a stream or handle the callback\r\n// Example:\r\n\r\ngulp.task('build-clean', function() {\r\n    return gulp.src(BUILD_DIRECTORY).pipe(clean());\r\n//  ^^^^^^\r\n//   This is the key here, to make sure tasks run asynchronously!\r\n});\r\n\r\ngulp.task('build-scripts', function() {\r\n    return gulp.src(SCRIPTS_SRC).pipe(...)...\r\n//  ^^^^^^\r\n//   This is the key here, to make sure tasks run asynchronously!\r\n});\r\n```\r\n\r\n## Help Support This Project\r\n\r\nIf you'd like to support this and other OverZealous Creations (Phil DeJarnett) projects, [donate via Gittip][gittip-url]!\r\n\r\n[![Support via Gittip][gittip-image]][gittip-url]\r\n\r\n## LICENSE\r\n\r\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\r\n\r\n\r\n[npm-url]: https://npmjs.org/package/run-sequence\r\n[npm-image]: https://badge.fury.io/js/run-sequence.png\r\n\r\n[travis-url]: http://travis-ci.org/OverZealous/run-sequence\r\n[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master\r\n\r\n[gittip-url]: https://www.gittip.com/OverZealous/\r\n[gittip-image]: https://raw2.github.com/OverZealous/gittip-badge/0.1.2/dist/gittip.png\r\n",
  "readmeFilename": "README.md",
  "_id": "run-sequence@0.3.6",
  "_from": "run-sequence@^0.3.6"
}
